name: Run Unit Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
# 
jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest]
        go: [1.16]
    name: ${{ matrix.os }} @ Go ${{ matrix.go }}
    runs-on: ${{ matrix.os }}

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: example
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}

    #   - name: Set GOPATH and PATH
    #     run: |
    #       echo "GOPATH=$(dirname $GITHUB_WORKSPACE)" >> $GITHUB_ENV
    #       echo "$(dirname $GITHUB_WORKSPACE)/bin" >> $GITHUB_PATH
    #     shell: bash

    #   - name: Set build variables
    #     run: |
    #       echo "GOPROXY=https://proxy.golang.org" >> $GITHUB_ENV
    #       echo "GO111MODULE=on" >> $GITHUB_ENV

      - name: Checkout Code
        uses: actions/checkout@v1
        with:
          ref: ${{ github.ref }}

      - name: Install Dependencies
        run: go get -v golang.org/x/lint/golint

      - name: Create env.test file
        run: |
          touch .env.test
          echo APP_HOST=localhost >> .env.test
          echo APP_PORT=8080 >> .env.test
          echo APP_NAME=go-rest-echo >> .env.test

          echo PG_HOST=postgres >> .env.test
          echo PG_PORT=5432 >> .env.test
          echo PG_USERNAME=user >> .env.test
          echo PG_PASSWORD=password >> .env.test
          echo PG_DATABASE=example >> .env.test
          cat .env.test

    #   - name: Run Migration
    #     run: make

      - name: Run Tests
        run: go test -race ./internal/... ./pkg/...