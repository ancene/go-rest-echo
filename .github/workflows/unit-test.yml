name: Run Unit Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest]
        go: [1.14, 1.15, 1.16]
    name: ${{ matrix.os }} @ Go ${{ matrix.go }}
    runs-on: ${{ matrix.os }}

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: example
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: example
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: rootpassword
          ports:
            - 33306:3306
            - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}

      - name: Set GOPATH and PATH
        run: |
          echo "GOPATH=$(dirname $GITHUB_WORKSPACE)" >> $GITHUB_ENV
          echo "$(dirname $GITHUB_WORKSPACE)/bin" >> $GITHUB_PATH
        shell: bash

      - name: Set build variables
        run: |
          echo "GOPROXY=https://proxy.golang.org" >> $GITHUB_ENV
          echo "GO111MODULE=on" >> $GITHUB_ENV

      - name: Checkout Code
        uses: actions/checkout@v1
        with:
          ref: ${{ github.ref }}

      - name: Install Dependencies
        run: go get -v ./...

      - name: Create env.test file
        run: |
          touch .env.test
          echo APP_HOST=localhost >> .env.test
          echo APP_PORT=8080 >> .env.test
          echo APP_NAME=go-rest-echo >> .env.test

          echo PG_HOST=localhost >> .env.test
          echo PG_PORT=5432 >> .env.test
          echo PG_USERNAME=user >> .env.test
          echo PG_PASSWORD=password >> .env.test
          echo PG_DATABASE=example >> .env.test

          echo MYSQL_HOST=localhost >> .env.test
          echo MYSQL_PORT=3306 >> .env.test
          echo MYSQL_USERNAME=root >> .env.test
          echo MYSQL_PASSWORD= >> .env.test
          echo MYSQL_DATABASE=example >> .env.test

      - name: Run Migration
        run: echo "run migration"

      - name: Run Tests
        run: go test ./internal/... ./pkg/...

      - name: Run Tests Coverage
        run: go test --coverprofile=coverage.coverprofile --covermode=atomic ./internal/... ./pkg/...

      - name: Upload coverage to Codecov
        if: success() && matrix.go == 1.16 && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v2
        with:
            token:
            fail_ci_if_error: false